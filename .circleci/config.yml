version: 2.1

orbs:
  postgres: onehq/postgres@1.1.0

commands:
  yarn-install:
    description: Install cached yarn packages
    steps:
      - restore_cache:
          keys: ['v3-{{ checksum "yarn.lock" }}']
      - run: yarn

  npm-login:
    description: Set npm login
    steps:
      - run: yarn config set npmRegistries --json '{"https://registry.yarnpkg.com":{"npmAuthToken":"${NPM_TOKEN}","npmAlwaysAuth":true}}'

  yarn-save-cache:
    description: Save yarn packages cache
    steps:
      - save_cache:
          key: v3-{{ checksum "yarn.lock" }}
          paths: ['.yarn/cache']

jobs:
  test:
    parameters:
      node-image:
        type: string
    docker:
      - image: << parameters.node-image >>
      - image: postgres:11
        environment:
          POSTGRES_DB: example
          POSTGRES_USER: example-admin
          POSTGRES_PASSWORD: example-pass
      - image: confluentinc/cp-zookeeper:5.2.2
        environment:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000
      - image: confluentinc/cp-kafka:5.5.3
        environment:
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_ZOOKEEPER_CONNECT: 'localhost:2181'
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://localhost:29092
      - image: confluentinc/cp-schema-registry:5.5.3
        environment:
          SCHEMA_REGISTRY_HOST_NAME: localhost
          SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'localhost:2181'

    steps:
      - checkout
      - run:
          name: 'Update Submodules'
          command: |
            git submodule sync
            git submodule update --init
      - yarn-install
      - yarn-save-cache
      - run: yarn lint
      - run: yarn build
      - postgres/install_postgres_client
      - run:
          name: 'Run install scripts for examples'
          command: |
            psql postgres://example-admin:example-pass@localhost:5432/example < examples/petstore/init.sql
            psql postgres://example-admin:example-pass@localhost:5432/example < examples/split/init.sql
            psql postgres://example-admin:example-pass@localhost:5432/example < packages/laminar/init.sql
      - run: yarn test

  publish:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - yarn-install
      - run: yarn build
      - npm-login
      - run: git config user.email "ovotech-ci@ovoenergy.com"
      - run: git config user.name "Ovotech CI"
      - run: git update-index --assume-unchanged .yarnrc.yaml
      - run: yarn lerna publish from-package --yes

workflows:
  version: 2
  test:
    jobs:
      - test:
          matrix:
            parameters:
              node-image: ['circleci/node:10', 'circleci/node:12', 'circleci/node:14']
          filters:
            branches:
              ignore: main
  deploy:
    jobs:
      - test:
          matrix:
            parameters:
              node-image: ['circleci/node:14']
          filters:
            branches:
              only: main
      - publish:
          requires:
            - test
